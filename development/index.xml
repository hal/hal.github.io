<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Development on HAL Management Console</title><link>https://hal.github.io/development/</link><description>Recent content in Development on HAL Management Console</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 06 Feb 2024 14:05:22 +0100</lastBuildDate><atom:link href="https://hal.github.io/development/index.xml" rel="self" type="application/rss+xml"/><item><title>Build &amp; Run</title><link>https://hal.github.io/development/build-run/</link><pubDate>Thu, 08 Mar 2018 16:29:52 +0100</pubDate><guid>https://hal.github.io/development/build-run/</guid><description>This page explains how to build, run and debug the console. We recommend to use Maven and the command line. This will work reliably across different environments and IDEs. To get a better understanding of the build process, we recommend that you take a look at the architecture as well.
All recent development happens in the branch main. There are additional branches mainly used for maintenance.
Build If not already done, clone the code from https://github.</description></item><item><title>Architecture</title><link>https://hal.github.io/development/architecture/</link><pubDate>Thu, 08 Mar 2018 16:30:01 +0100</pubDate><guid>https://hal.github.io/development/architecture/</guid><description>HAL is a client side RIA without server side dependencies. It is a GWT application - which means it&amp;rsquo;s written almost completely in Java. GWT is used to transpile the Java code into a bunch of JavaScript, HTML and CSS files. HAL also uses external JavaScript dependencies. These dependencies are managed using NPM and bundled using Parcel. NPM and Parcel are integrated into the Maven build using the maven-frontend-plugin.
We use the model view presenter pattern and GWTP for its implementation.</description></item><item><title>Building Blocks</title><link>https://hal.github.io/development/building-blocks/</link><pubDate>Thu, 08 Mar 2018 16:30:11 +0100</pubDate><guid>https://hal.github.io/development/building-blocks/</guid><description>This section describes the main building blocks and central concepts in HAL. The chapters follow a logical order starting from the fundamental concepts to the higher-level modules.
Dependency Injection HAL uses GIN for dependency injection. Although no longer actively developed, GIN is a stable and mature DI framework. In the long run we want to replace GIN with Dagger. But this requires a new GWTP version which currently depends on GIN.</description></item><item><title>Branches</title><link>https://hal.github.io/development/branches/</link><pubDate>Tue, 08 Feb 2022 16:29:52 +0100</pubDate><guid>https://hal.github.io/development/branches/</guid><description>This page lists the branches of HAL and describes their relation to the WildFly and EAP major versions. If you want to see a full list of all HAL releases and a detailed changelog, please go to the release notes.
The information on this page is important if you want to contribute to HAL. Especially if you like to backport an issue or want to submit a PR for maintenance.</description></item></channel></rss>