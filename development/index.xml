<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Development on HAL Management Console</title><link>https://hal.github.io/development/</link><description>Recent content in Development on HAL Management Console</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 09 Mar 2018 07:54:42 +0100</lastBuildDate><atom:link href="https://hal.github.io/development/index.xml" rel="self" type="application/rss+xml"/><item><title>Build &amp; Run</title><link>https://hal.github.io/development/build-run/</link><pubDate>Thu, 08 Mar 2018 16:29:52 +0100</pubDate><guid>https://hal.github.io/development/build-run/</guid><description>This page explains how to build, run and debug the console. We recommend to use Maven and the command line. This will work reliably across different environments and IDEs.
Build If not already done, clone the code from https://github.com/hal/console/ or fork the repository into your own personal GitHub account.
For a full build use
mvn clean install This includes the GWT compiler, which might take a while. If you just want to make sure that there are no compilation or test failures, you can skip the GWT compiler and use</description></item><item><title>Architecture</title><link>https://hal.github.io/development/architecture/</link><pubDate>Thu, 08 Mar 2018 16:30:01 +0100</pubDate><guid>https://hal.github.io/development/architecture/</guid><description>HAL is a client side RIA without server side dependencies. It is a GWT application - which means it&amp;rsquo;s written almost completely in Java. GWT is used to transpile the Java code into a bunch of JavaScript, HTML and CSS files. HAL uses some external JavaScript libraries as well. These dependencies are managed using NPM which is in turn integrated into the Maven build using the maven-frontend-plugin.
We use the model view presenter pattern and GWTP for its implementation.</description></item><item><title>Building Blocks</title><link>https://hal.github.io/development/building-blocks/</link><pubDate>Thu, 08 Mar 2018 16:30:11 +0100</pubDate><guid>https://hal.github.io/development/building-blocks/</guid><description>This section describes the main building blocks and central concepts in HAL. The chapters follow a logical order starting from the fundamental concepts to the higher-level modules.
Dependency Injection HAL uses GIN for dependency injection. Although no longer actively developed, GIN is a stable and mature DI framework. In the long run we want to replace GIN with Dagger. But this requires a new GWTP version which currently depends on GIN.</description></item></channel></rss>